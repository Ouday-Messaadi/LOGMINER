pipeline {
  agent any

  environment {
    DB_URL = 'jdbc:postgresql://host.docker.internal:5432/log_miner'
    DB_USERNAME = 'postgres'
    DB_PASSWORD = 'f56724'
    PORT = '8080'
    ISSUER_URI = 'https://login.microsoftonline.com/XXXXXXXXXXXXXXXXXXXXXXXXXX/v2.0'
    CLIENT_ID = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'
    CLIENT_SECRET = 'WS_8Q~pX1xUWWcXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'

    RAG_URL = 'http://localhost:8000/rag/parse'
    HINT_URL = 'http://localhost:8000/hint/gen'
    SECRET_KEY = 'MaSuperCleUltraSecre'
    SEND_MAIL_FROM = 'log.miner.org@gmail.com'
    MAIL_APP_PASSWORD = 'xdnkxuamoyagtljn'

    REDIS_HOST = 'host.docker.internal'
    REDIS_PORT = '6379'
    SILENCE_ALERT_MAIL_MINUTES = '60'
  }

  options {
    // Supprime les builds plus anciens que 10 pour éviter l'encombrement
    buildDiscarder(logRotator(numToKeepStr: '10'))
    // Timeout général pour éviter les jobs bloqués
    timeout(time: 10, unit: 'MINUTES')
    // Marque les logs de chaque étape clairement
    timestamps()
  }

  stages {
    stage('Clone') {
      steps {
        git url: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
            branch: 'main',
            credentialsId: 'github_token1'
      }
    }

    stage('Build') {
      steps {
        sh 'chmod +x mvnw'
        sh './mvnw clean package -DskipTests'
      }
    }

    stage('Test') {
      steps {
         sh './mvnw test -DfailIfNoTests=false'
      }
      post {
        always {
          junit '**/target/surefire-reports/*.xml' // Publie les résultats de test
        }
      }
    }


    stage('Run Application') {
      steps {
        echo 'Lancement de l\'application Spring Boot...'
        sh 'nohup java -jar target/*.jar > app.log 2>&1 &'
      }
    }
  }

post {
  failure {
    echo '❌ Le build a échoué.'

    emailext(
      subject: "❌ Échec du build Jenkins: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
      body: """Le build a échoué.
Consulter les logs ici : ${env.BUILD_URL}
""",
      to: 'admin@example.com',
      from: "${env.SEND_MAIL_FROM}",
      mimeType: 'text/plain'
    )
  }

  success {
    echo '✅ Build terminé avec succès.'
  }
}

}
